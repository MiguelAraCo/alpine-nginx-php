# /etc/nginx/nginx.conf

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 1m;

    # Timeout for keep-alive connections. Server will close connections after
    # this time.
    keepalive_timeout 65;

    # Specifies the main log format.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;
    error_log /dev/stderr info;

	server {
		listen [::]:80 default_server;
		listen 80 default_server;
		server_name _;

		# Sendfile copies data between one FD and other from within the kernel,
        # which is more efficient than read() + write().
		sendfile off;

		root /var/www/html;
		index index.php index.html;

		location / {
		    # First attempt to serve request as file, then
		    # as directory, then fall back to index.php
		    try_files $uri $uri/ /index.php?q=$uri&$args;
		}

		# Redirect server error pages to the static page /50x.html
		error_page 500 502 503 504 /50x.html;
		location = /50x.html {
	        root /var/lib/nginx/html;
		}

		# Pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		location ~ \.php$ {
		    try_files $uri =404;
		    fastcgi_split_path_info ^(.+\.php)(/.+)$;
		    fastcgi_pass  localhost:9000;
		    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		    fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		    fastcgi_index index.php;
		    include fastcgi_params;
		}

		location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
		    expires 5d;
		}

		# deny access to . files, for security
		location ~ /\. {
		    log_not_found off;
		    deny all;
		}
    }
}